name: Build Intel
run-name: Building pyLOM Intel on branch <${{ github.head_ref }}> to <${{ github.base_ref }}> by @${{ github.actor }}

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main", "develop" ]

defaults:
  run:
    shell: bash

jobs:    
  build_intel:
    runs-on: ubuntu-22.04
    env:
      CC: mpiicc
      CXX: mpiicpc
      FC: mpiifort
    steps:
      # Free up some disk space in the runner
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v4.1
        with:
          remove-android: 'true'
          remove-dotnet:  'true'
          remove-haskell: 'true'
          remove-codeql:  'true'
      - uses: actions/checkout@v3
      # Setup Intel MPI and Python for this job
      - name: Intel Apt repository
        timeout-minutes: 1
        run: |
          wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
          sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
          rm GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
          echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
          sudo apt-get update
      - name: Install Intel oneAPI
        timeout-minutes: 5
        run: sudo apt-get install intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic intel-oneapi-mpi intel-oneapi-mpi-devel 
        #intel-oneapi-mkl
      - name: Setup Intel oneAPI environment
        run: |
          source /opt/intel/oneapi/setvars.sh
          printenv >> $GITHUB_ENV
      - name: Set up Python 3.11.11
        uses: actions/setup-python@v3
        with:
          python-version: 3.11.11
      # Run pyLOM compilation and deployment
      - name: Set up configuration
        run: |
          sed -i 's/USE_MKL       = OFF/USE_MKL       = ON/g' options.cfg
          sed -i 's/FORCE_GCC     = ON/FORCE_GCC     = OFF/g' options.cfg
      - name: Set up dependencies
        run: make deps requirements_full
#      - name: Fix h5py
#        run: CC=mpicc HDF5_MPI="ON" pip install --no-binary=h5py h5py
      - name: Build compiled code
        run: make python
      - name: Install
        run: make install
